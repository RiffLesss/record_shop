Index: Main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from flask import Flask, render_template, request, make_response, session, redirect, abort\r\nfrom sqlalchemy import func\r\nfrom data import db_session\r\nfrom data.users import User\r\nfrom data.RegisterForm import RegisterForm\r\nfrom data.LoginForm import LoginForm\r\nfrom data.products import Product\r\nfrom data.carts import Cart\r\nfrom data.Musicians import Musician\r\nfrom data.cart_product import Cart_Product\r\nfrom flask_login import LoginManager, login_user, login_required, logout_user, current_user\r\nimport datetime\r\n\r\n\r\napp = Flask(__name__)\r\napp.config['PERMANENT_SESSION_LIFETIME'] = datetime.timedelta(days=365)\r\napp.config['SECRET_KEY'] = 'yandexlyceum_secret_key'\r\n\r\nlogin_manager = LoginManager()\r\nlogin_manager.init_app(app)\r\n\r\n\r\ndef main():\r\n    db_session.global_init(\"db/shop.db\")\r\n    #app.run()\r\n    session = db_session.create_session()\r\n\r\n    @app.route(\"/\")\r\n    def index():\r\n        session = db_session.create_session()\r\n        products = session.query(Product).order_by(Product.views.desc())\r\n        return render_template(\"index.html\", products=products)\r\n\r\n    @app.route(\"/TopSingles\")\r\n    def singles():\r\n        session = db_session.create_session()\r\n        products = session.query(Product).filter(Product.is_lp == False).order_by(Product.views.desc())\r\n        return render_template(\"index.html\", products=products)\r\n\r\n    @app.route(\"/TopAlbums\")\r\n    def albums():\r\n        session = db_session.create_session()\r\n        products = session.query(Product).filter(Product.is_lp == True).order_by(Product.views.desc())\r\n        return render_template(\"index.html\", products=products)\r\n\r\n    @app.route(\"/year/<int:year>\")\r\n    def year(year):\r\n        session = db_session.create_session()\r\n        products = session.query(Product).filter(Product.year == year).order_by(Product.views.desc())\r\n        return render_template(\"index.html\", products=products)\r\n\r\n    @app.route(\"/musician/<name>\")\r\n    def musician(name):\r\n        name = name.replace('%20', ' ')\r\n        session = db_session.create_session()\r\n        musician = session.query(Musician).filter(Musician.name == name).first()\r\n        products = session.query(Product).filter(Product.musician_id == musician.id).order_by(Product.views.desc())\r\n        return render_template(\"index.html\", products=products)\r\n\r\n    @app.route('/register', methods=['GET', 'POST'])\r\n    def reqister():\r\n        form = RegisterForm()\r\n        if form.validate_on_submit():\r\n            if form.password.data != form.password_again.data:\r\n                return render_template('register.html', title='Registration',\r\n                                       form=form,\r\n                                       message=\"Passwords don't match\")\r\n            session = db_session.create_session()\r\n            if session.query(User).filter(User.email == form.email.data).first():\r\n                return render_template('register.html', title='Registration',\r\n                                       form=form,\r\n                                       message=\"This user already exists\")\r\n            user = User(\r\n                name=form.name.data,\r\n                surname=form.surname.data,\r\n                email=form.email.data,\r\n            )\r\n            user.set_password(form.password.data)\r\n            user_cart = Cart(user_id=user.id)\r\n            session.add(user)\r\n            session.add(user_cart)\r\n            session.commit()\r\n            return redirect('/login')\r\n        return render_template('register.html', title='Registration', form=form)\r\n\r\n    @app.route('/add_to_cart/<int:id>')\r\n    @login_required\r\n    def add_to_cart(id):\r\n        product = session.query(Product).get(id)\r\n        cart = session.query(Cart).filter(Cart.user_id == current_user.id).first()\r\n        cart_product = Cart_Product(\r\n            product_id=product.id,\r\n            cart_id=cart.id,\r\n            count=1,\r\n            one_price=product.price,\r\n            full_price=product.price\r\n        )\r\n        session.add(cart_product)\r\n        session.commit()\r\n        address = '/product/' + str(id)\r\n        return redirect(address)\r\n\r\n    @app.route('/delete/<int:id>', methods=['GET', 'POST'])\r\n    @login_required\r\n    def delete(id):\r\n        session = db_session.create_session()\r\n        cart_products = session.query(Cart_Product).filter(Cart_Product.id == id).first()\r\n        if cart_products:\r\n            session.delete(cart_products)\r\n            session.commit()\r\n        else:\r\n            abort(404)\r\n        return redirect('/cart')\r\n\r\n    @app.route('/cart')\r\n    def cart():\r\n        empty_cart = False\r\n        cart = session.query(Cart).get(current_user.id)\r\n        cart_products = session.query(Cart_Product).filter(Cart_Product.cart_id == cart.id)\r\n        product_count = session.query(func.sum(Cart_Product.count)).filter_by(cart_id=cart.id).scalar()\r\n        full_price = session.query(func.sum(Cart_Product.full_price)).filter_by(cart_id=cart.id).scalar()\r\n        if cart_products:\r\n            empty_cart = True\r\n        return render_template('cart.html', title='Cart', cart_products=cart_products,\r\n                               product_count=product_count, full_price=full_price, empty_cart=empty_cart)\r\n\r\n    @login_manager.user_loader\r\n    def load_user(user_id):\r\n        session = db_session.create_session()\r\n        return session.query(User).get(user_id)\r\n\r\n    @app.route('/login', methods=['GET', 'POST'])\r\n    def login():\r\n        form = LoginForm()\r\n        if form.validate_on_submit():\r\n            session = db_session.create_session()\r\n            user = session.query(User).filter(User.email == form.email.data).first()\r\n            if user and user.check_password(form.password.data):\r\n                login_user(user, remember=form.remember_me.data)\r\n                return redirect(\"/\")\r\n            return render_template('login.html',\r\n                                   message=\"Wrong email or password\",\r\n                                   form=form)\r\n        return render_template('login.html', title='Authorization', form=form)\r\n\r\n    @app.route('/logout')\r\n    @login_required\r\n    def logout():\r\n        logout_user()\r\n        return redirect(\"/\")\r\n\r\n    @app.route('/changetheme')\r\n    @login_required\r\n    def change_theme():\r\n        session = db_session.create_session()\r\n        if current_user.dark_theme:\r\n            session.query(User).filter(User.id == current_user. id).update({User.dark_theme: 0},\r\n                                                                          synchronize_session=False)\r\n        else:\r\n            session.query(User).filter(User.id == current_user.id).update({User.dark_theme: 1},\r\n                                                                          synchronize_session=False)\r\n        session.commit()\r\n        return redirect(\"/\")\r\n\r\n    @app.route('/changeform')\r\n    @login_required\r\n    def change_form():\r\n        session = db_session.create_session()\r\n        if current_user.circle_theme:\r\n            session.query(User).filter(User.id == current_user.id).update({User.circle_theme: 0},\r\n                                                                          synchronize_session=False)\r\n        else:\r\n            session.query(User).filter(User.id == current_user.id).update({User.circle_theme: 1},\r\n                                                                          synchronize_session=False)\r\n        session.commit()\r\n        return redirect(\"/\")\r\n\r\n    @app.route(\"/count+/<int:id>\")\r\n    def plus_count(id):\r\n        session.query(Cart_Product).filter(Cart_Product.id == id).\\\r\n            update({Cart_Product.count: Cart_Product.count + 1,\r\n                    Cart_Product.full_price: Cart_Product.one_price * (Cart_Product.count + 1)})\r\n        c_p = session.query(Cart_Product).filter(Cart_Product.id == id).first()\r\n        full_price = round(c_p.full_price, 2)\r\n        session.query(Cart_Product).filter(Cart_Product.id == id). \\\r\n            update({Cart_Product.full_price: full_price})\r\n        session.commit()\r\n        return redirect(\"/cart\")\r\n\r\n    @app.route(\"/count-/<int:id>\")\r\n    def minus_count(id):\r\n        count = session.query(Cart_Product).get(id)\r\n        if count.count > 1:\r\n            session.query(Cart_Product).filter(Cart_Product.id == id). \\\r\n                update({Cart_Product.count: Cart_Product.count - 1,\r\n                        Cart_Product.full_price: Cart_Product.one_price * (Cart_Product.count - 1)})\r\n            c_p = session.query(Cart_Product).filter(Cart_Product.id == id).first()\r\n            full_price = round(c_p.full_price, 2)\r\n            session.query(Cart_Product).filter(Cart_Product.id == id). \\\r\n                update({Cart_Product.full_price: full_price})\r\n            session.commit()\r\n        return redirect(\"/cart\")\r\n\r\n\r\n    app.run()\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Main.py	(revision e759556762940432fd896671c9a918c4cd7d8eb9)
+++ Main.py	(date 1588864485087)
@@ -28,6 +28,7 @@
     @app.route("/")
     def index():
         session = db_session.create_session()
+        special = session.query(Product).get(1)
         products = session.query(Product).order_by(Product.views.desc())
         return render_template("index.html", products=products)
 
@@ -119,8 +120,9 @@
         cart_products = session.query(Cart_Product).filter(Cart_Product.cart_id == cart.id)
         product_count = session.query(func.sum(Cart_Product.count)).filter_by(cart_id=cart.id).scalar()
         full_price = session.query(func.sum(Cart_Product.full_price)).filter_by(cart_id=cart.id).scalar()
-        if cart_products:
+        if cart_products.count() == 0:
             empty_cart = True
+        print(full_price)
         return render_template('cart.html', title='Cart', cart_products=cart_products,
                                product_count=product_count, full_price=full_price, empty_cart=empty_cart)
 
Index: templates/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n{% block content %}\r\n{% if current_user.is_authenticated and current_user.dark_theme %}\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/main_page_dark.css\">\r\n{% else %}\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/main_page_light.css\">\r\n{% endif %}\r\n<ul class=\"all-products\">\r\n    {% for item in products %}\r\n    {% if current_user.is_authenticated and current_user.circle_theme %}\r\n        <li class=\"product-item\" style=\"border-radius: 8px\">\r\n    {% else %}\r\n        <li class=\"product-item\" style=\"border-radius: 0px\">\r\n    {% endif%}\r\n        <div class=\"item-text\">\r\n            <p class=\"item-name\">\r\n                <a href=\"/product/{{ item.id }}\">{{ item.name }}</a>\r\n            </p>\r\n            <p class=\"item-musician\">\r\n                <a href=\"/musician/{{ item.musician.name }}\">{{ item.musician.name }}</a>\r\n            </p>\r\n            <p class=\"item-price\">${{ item.price }}</p>\r\n        </div>\r\n        <a href=\"/product/{{ item.id }}\">\r\n            <img class=\"product-photo\" src=\"{{ item.photo }}\" height=\"240\" width=\"240\" alt=\"No photo now\">\r\n        </a>\r\n    </li>\r\n    {% endfor %}\r\n</ul>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/index.html	(revision e759556762940432fd896671c9a918c4cd7d8eb9)
+++ templates/index.html	(date 1588864485098)
@@ -6,6 +6,11 @@
     <link rel="stylesheet" type="text/css" href="../static/css/main_page_light.css">
 {% endif %}
 <ul class="all-products">
+    <div class="special">
+        <a href="/product/{{ item.id }}">
+            <img class="product-photo" src="{{ item.photo }}" height="240" width="240" alt="No photo now">
+        </a>
+    </div>
     {% for item in products %}
     {% if current_user.is_authenticated and current_user.circle_theme %}
         <li class="product-item" style="border-radius: 8px">
Index: templates/cart.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends \"base.html\" %}\r\n\r\n{% set sum_price = 0 %}\r\n\r\n{% block content %}\r\n{% if current_user.dark_theme %}\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/cart_dark.css\">\r\n{% else %}\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/cart_light.css\">\r\n{% endif %}\r\n<div class=\"all-cart-products\">\r\n    <p class=\"word-cart\">Cart</p>\r\n    {% for item in cart_products %}\r\n    {% if current_user.is_authenticated and current_user.circle_theme %}\r\n        <li class=\"cart-product-item\" style=\"border-radius: 8px\">\r\n    {% else %}\r\n        <li class=\"cart-product-item\" style=\"border-radius: 0px\">\r\n    {% endif%}\r\n        <div class=\"item-text-div\">\r\n            <a class=\"cart-product-item-name\" href=\"/product/{{ item.product.id }}\">{{ item.product.name }}</a>\r\n            <a class=\"cart-product-item-musician\" href=\"/product/{{ item.product.musician.id}}\">{{ item.product.musician.name }}</a>\r\n            <a class=\"cart-product-item-year\" href=\"/year/{{ item.product.year }}\">{{ item.product.year }}</a>\r\n        </div>\r\n        <a href=\"/product/{{ item.product.id }}\">\r\n            <img class=\"cart-product-photo\" src=\"{{ item.product.photo }}\" height=\"130\" width=\"130\" alt=\"No photo now\">\r\n        </a>\r\n        {% if current_user.dark_theme %}\r\n            <a href=\"/delete/{{ item.id}}\">\r\n                <img class=\"delete-product-photo\" src=\"../static/img/delete_dark.jpg\" height=\"40\" width=\"30\" alt=\"No photo now\">\r\n            </a>\r\n        {% else %}\r\n        <a href=\"/delete/{{ item.id}}\">\r\n                <img class=\"delete-product-photo\" src=\"../static/img/delete_light.jpg\" height=\"40\" width=\"30\" alt=\"No photo now\">\r\n            </a>\r\n        {% endif %}\r\n        <div class=\"item-right-div\">\r\n            <p class=\"cart-product-price\">${{ item.product.price * item.count }}</p>\r\n            {% if current_user.dark_theme %}\r\n                <div class=\"cpc\">\r\n                    <a class=\"btn btn-outline-light cpc-b-\" href=\"/count-/{{ item.id }}\">-</a>\r\n                    <p class=\"cart-product-count\">{{ item.count }}</p>\r\n                    <a class=\"btn btn-outline-light cpc-b+\" href=\"/count+/{{ item.id }}\">+</a>\r\n                </div>\r\n            {% else %}\r\n                <div class=\"cpc\">\r\n                    <a class=\"btn btn-outline-secondary cpc-b-\" href=\"/count-/{{ item.id }}\">-</a>\r\n                    <p class=\"cart-product-count\">{{ item.count }}</p>\r\n                    <a class=\"btn btn-outline-secondary cpc-b+\" href=\"/count+/{{ item.id }}\">+</a>\r\n                </div>\r\n            {% endif %}\r\n        </div>\r\n    </li>\r\n    {% endfor %}\r\n    {% if empty_cart %}\r\n        <div class=\"empty-cart\">\r\n            <p class=\"empty-cart-text\">Your cart is empty<br>Please add products which you want to buy</p>\r\n        </div>\r\n    {% else %}\r\n        <div class=\"order-div\">\r\n            <p class=\"order-words\">Place your order</p>\r\n            <div class=\"text_btn\">\r\n                <div class=\"text-order-div\">\r\n                    <p class=\"sum-price\">Full price: ${{ sum_price }}</p>\r\n                    <p class=\"product-count\">Record count: {{product_count}}</p>\r\n                </div>\r\n                {% if current_user.dark_theme %}\r\n                    <a class=\"btn btn-light order-btn\">Order</a>\r\n                {% else %}\r\n                    <a class=\"btn btn-dark text-light order-btn\">Order</a>\r\n                {% endif %}\r\n            </div>\r\n        </div>\r\n    {% endif %}\r\n</div>\r\n{% endblock %}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- templates/cart.html	(revision e759556762940432fd896671c9a918c4cd7d8eb9)
+++ templates/cart.html	(date 1588862733492)
@@ -34,7 +34,7 @@
             </a>
         {% endif %}
         <div class="item-right-div">
-            <p class="cart-product-price">${{ item.product.price * item.count }}</p>
+            <p class="cart-product-price">${{ item.full_price }}</p>
             {% if current_user.dark_theme %}
                 <div class="cpc">
                     <a class="btn btn-outline-light cpc-b-" href="/count-/{{ item.id }}">-</a>
@@ -60,8 +60,8 @@
             <p class="order-words">Place your order</p>
             <div class="text_btn">
                 <div class="text-order-div">
-                    <p class="sum-price">Full price: ${{ sum_price }}</p>
-                    <p class="product-count">Record count: {{product_count}}</p>
+                    <p class="sum-price">Full price: ${{ full_price }}</p>
+                    <p class="product-count">Record count: {{ product_count }}</p>
                 </div>
                 {% if current_user.dark_theme %}
                     <a class="btn btn-light order-btn">Order</a>
